name: "Netlify: set env, build, deploy, test"

on:
  workflow_dispatch:

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install Node, pnpm and Netlify CLI
        run: |
          sudo npm i -g pnpm@latest netlify-cli jq

      - name: Ensure required Netlify secrets are present
        run: |
          if [ -z "${{ secrets.NETLIFY_AUTH_TOKEN }}" ] || [ -z "${{ secrets.NETLIFY_SITE_ID }}" ]; then
            echo "NETLIFY_AUTH_TOKEN and NETLIFY_SITE_ID must be set as repository secrets." >&2
            exit 1
          fi
          # No Supabase secrets required for Neon/Postgres deployment.

      - name: Install dependencies
        run: |
          pnpm install --frozen-lockfile

      - name: Build site
        run: |
          pnpm run build

      - name: Deploy to Netlify (prod)
        run: |
          echo "Deploying site to Netlify (prod)"
          netlify deploy --prod --dir=dist --site ${{ secrets.NETLIFY_SITE_ID }} --auth ${{ secrets.NETLIFY_AUTH_TOKEN }}

      - name: Wait for functions to warm and test debug-firestore (with retries)
        env:
          SITE_DOMAIN: ${{ secrets.NETLIFY_SITE_DOMAIN }}
        run: |
          SITE_DOMAIN=${SITE_DOMAIN:-bemacho.netlify.app}
          echo "Checking debug-firestore on https://$SITE_DOMAIN"
          set -e
          MAX_ATTEMPTS=8
          ATTEMPT=1
          SLEEP=5
          while [ $ATTEMPT -le $MAX_ATTEMPTS ]; do
            echo "Attempt #$ATTEMPT: calling debug-firestore?test=1..."
            RESP=$(curl -sS -m 30 "https://$SITE_DOMAIN/.netlify/functions/debug-supabase" || true)
            echo "response: $RESP"
            if echo "$RESP" | grep -q '"ok":true'; then
              echo "Debug test succeeded on attempt $ATTEMPT"
              echo "$RESP" > debug-response.json
              break
            fi
            echo "Not ready yet (or debug failed). Sleeping $SLEEP seconds and retrying..."
            sleep $SLEEP
            ATTEMPT=$((ATTEMPT+1))
            SLEEP=$((SLEEP*2))
          done
          if [ $ATTEMPT -gt $MAX_ATTEMPTS ]; then
            echo "debug-firestore did not return ok after $MAX_ATTEMPTS attempts" >&2
            exit 1
          fi

      - name: Migrate fallback entries into Supabase (if implemented)
        env:
          SITE_DOMAIN: ${{ secrets.NETLIFY_SITE_DOMAIN }}
        run: |
          SITE_DOMAIN=${SITE_DOMAIN:-bemacho.netlify.app}
          echo "Calling migrate-to-supabase on https://$SITE_DOMAIN (if function exists)"
          curl -sS -X POST "https://$SITE_DOMAIN/.netlify/functions/migrate-to-supabase" | jq '.' || true

      - name: Post a small inventory test (verify persistence)
        env:
          SITE_DOMAIN: ${{ secrets.NETLIFY_SITE_DOMAIN }}
        run: |
          SITE_DOMAIN=${SITE_DOMAIN:-bemacho.netlify.app}
          echo "Posting inventory test to https://$SITE_DOMAIN/api/inventory"
          TEST_PAYLOAD='{"productId":null,"quantity":1,"notes":"gha smoke","type":"adjustment","source":"gha"}'
          for i in 1 2 3; do
            HTTP_STATUS=$(curl -sS -o /tmp/inv_resp -w "%{http_code}" -X POST "https://$SITE_DOMAIN/api/inventory" -H "Content-Type: application/json" -d "$TEST_PAYLOAD" || true)
            echo "Attempt $i returned status $HTTP_STATUS"
            if [ "$HTTP_STATUS" = "200" ] || [ "$HTTP_STATUS" = "201" ]; then
              echo "Inventory POST succeeded"
              cat /tmp/inv_resp || true
              exit 0
            fi
            sleep $((i*3))
          done
          echo "Inventory POST failed after retries" >&2
          cat /tmp/inv_resp || true
          exit 1
